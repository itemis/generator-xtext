<%
	const isOrion = webFramework === 'Orion';
	const isAce = webFramework === 'Ace';
	const isCodeMirror = webFramework === 'CodeMirror';
-%>
plugins {
	id 'war'
<% if (isOrion) { -%>
	id 'de.undercouch.download' version '3.2.0'
<% } -%>
}
<% if (isOrion) { -%>
import de.undercouch.gradle.tasks.download.Download
<% } -%>

dependencies {
	compile project(':<%= projectName %>')
	compile project(':<%= projectName %>.ide')
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.web:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.web.servlet:${xtextVersion}"
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
	compile "org.webjars:requirejs:2.3.6"
	compile "org.webjars:jquery:3.6.0"
<% if (isAce) { -%>
	compile "org.webjars:ace:1.3.3"
<% } -%>
<% if (isCodeMirror) { -%>
	compile "org.webjars:codemirror:5.41.0"
<% } -%>
	providedCompile "org.eclipse.jetty:jetty-annotations:9.4.9.v20180320"
	providedCompile "org.slf4j:slf4j-simple:1.7.21"
}
<% if (isOrion) { -%>
def orionDir = file('src/main/webapp/orion')
def orionUrl = 'http://download.eclipse.org/orion/drops/R-17.0-201801111044/built-codeEdit.zip'

task downloadOrion(type: Download) {
	src orionUrl
	dest file("$buildDir/orion/built-codeEdit.zip")
}

task unpackOrion(dependsOn: downloadOrion, type: Copy) {
	from(zipTree(downloadOrion.dest))
	into(orionDir)
}

build.dependsOn unpackOrion
<% } -%>

task jettyRun(type:JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath<% if (isOrion) { %>, unpackOrion<% } %>)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	main = '<%= rootPackage %>.web.ServerLauncher'
	standardInput = System.in
	group = 'run'
	description = 'Starts an example Jetty server with your language'
}
